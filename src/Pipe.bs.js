// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Utils = require("./pipes/utils");
var Caml_splice_call = require("bs-platform/lib/js/caml_splice_call.js");
var Tee = require("./pipes/build/pipes/core/tee");
var Pipe = require("./pipes/build/pipes/core/pipe");
var Chain = require("./pipes/build/pipes/core/chain");
var Zip = require("./pipes/build/pipes/readable/zip");
var Sequence = require("./pipes/build/pipes/core/sequence");
var Merge = require("./pipes/build/pipes/readable/merge");

function make(prim) {
  return Pipe.default(prim);
}

function chainPipes(prim) {
  return Caml_splice_call.spliceApply(Chain.default, [prim]);
}

function chain2(prim, prim$1) {
  return Chain.default(prim[1], prim$1[1]);
}

function chain3(prim, prim$1, prim$2) {
  return Chain.default(prim[1], prim$1[1], prim$2[1]);
}

function chain4(prim, prim$1, prim$2, prim$3) {
  return Chain.default(prim[1], prim$1[1], prim$2[1], prim$3[1]);
}

function chain5(prim, prim$1, prim$2, prim$3, prim$4) {
  return Chain.default(prim[1], prim$1[1], prim$2[1], prim$3[1], prim$4[1]);
}

function chain6(prim, prim$1, prim$2, prim$3, prim$4, prim$5) {
  return Chain.default(prim[1], prim$1[1], prim$2[1], prim$3[1], prim$4[1], prim$5[1]);
}

function sequence(prim) {
  return Sequence.default();
}

function tee(prim) {
  return Tee.default(prim);
}

function zip(prim) {
  return Zip.default(prim);
}

function merge(prim) {
  return Merge.merge(prim);
}

function makeReadable(prim) {
  return Utils.makeReadable(prim);
}

function consume(prim) {
  return Utils.consume(prim);
}

exports.make = make;
exports.chainPipes = chainPipes;
exports.chain2 = chain2;
exports.chain3 = chain3;
exports.chain4 = chain4;
exports.chain5 = chain5;
exports.chain6 = chain6;
exports.sequence = sequence;
exports.tee = tee;
exports.zip = zip;
exports.merge = merge;
exports.makeReadable = makeReadable;
exports.consume = consume;
/* ./pipes/utils Not a pure module */
